<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhQwBDAPfZAAAAAAEBAQICAgMDAwQEBAUFBQYGBgcHBwgICAkJCQoKCgsLCwwMDA0NDQ4ODg8P
        DxAQEBERERISEhMTExQUFBUVFRYWFhcXFxgYGBkZGRoaGhsbGxwcHB0dHR4eHh8fHyAgICEhISIiIiMj
        IyQkJCUlJSYmJicnJygoKCkpKSoqKisrKywsLC0tLS4uLi8vLzAwMDExMTIyMjMzMzQ0NDU1NTY2Njc3
        Nzg4ODk5OTo6Ojs7Ozw8PD09PT4+Pj8/P0BAQEFBQUJCQkNDQ0REREVFRUZGRkdHR0hISElJSUpKSktL
        S0xMTE1NTU5OTk9PT1BQUFFRUVJSUlNTU1RUVFVVVVZWVldXV1hYWFlZWVpaWltbW1xcXF1dXV5eXl9f
        X2BgYGFhYWJiYmNjY2RkZGVlZWZmZmdnZ2hoaGlpaWpqamtra2xsbG1tbW5ubm9vb3BwcHFxcXJycnNz
        c3R0dHV1dXZ2dnd3d3h4eHl5eXp6ent7e3x8fH19fX5+fn9/f4CAgIGBgYKCgoODg4SEhIWFhYaGhoeH
        h4iIiImJiYqKiouLi4yMjI2NjY6Ojo+Pj5CQkJGRkZKSkpOTk5SUlJWVlZaWlpeXl5iYmJmZmZqampub
        m5ycnJ2dnZ6enp+fn6CgoKGhoaKioqOjo6SkpKWlpaampqenp6ioqKmpqaqqqqurq6ysrK2tra6urq+v
        r7CwsLGxsbKysrOzs7S0tLW1tba2tre3t7i4uLm5ubq6uru7u7y8vL29vb6+vr+/v8DAwMHBwcLCwsPD
        w8TExMXFxcbGxsfHx8jIyMnJycrKysvLy8zMzM3Nzc7Ozs/Pz9DQ0NHR0dLS0tPT09TU1NXV1dbW1tfX
        19jY2NnZ2dra2tvb29zc3N3d3d7e3t/f3+Dg4OHh4eLi4uPj4+Tk5OXl5ebm5ufn5+jo6Onp6erq6uvr
        6+zs7O3t7e7u7u/v7/Dw8PHx8fLy8vPz8/T09PX19fb29vf39/j4+Pn5+fr6+vv7+/z8/P39/f7+/v//
        /yH/C05FVFNDQVBFMi4wAwGIEwAh+QQJGQDZACwAAAAAQwBDAAcI/ACzCRxIsKDBgwgTKlzIsKHDhxAj
        SpxIcSKgixgzAqrIMaHGjyA3dqwI8p/Jkyj/gRwJUWPKlzBVZmS50GVMk4Bu4pxJ02BGnSdzApV5sSdB
        jEN3Ch2K0ejPoDqRJiUqsqNUpTdtvryq1OrFrV9hak3JtSvFsjtjlhSrtqjFpVODho0r9y1dsnPvyoyI
        Nm7fqU0d/gWcV29ghoUNJ4bLtKpCqYz9Fk68Va5jhHMHZ82sWSZKtx7Ddm4rdKxYzpcLTtZLVCnlz4xB
        H3x9F/JTurJVR2bdmuruxph/K855W3Fw3mCJ006ae+By3B+R7/UpfPho4Lql4y3Ou/lz6MzXsR+tXju8
        eOelv0c1v71u9t7d1ZN2Px5rfPmnl3onLxn/eYH+bcYeUPtp5xp/klFnoGsL7jQbgg1Cd1yEETYHIIQU
        MpfahRk2aCGHHUr3IYhQhagWWI+JFqB2Vx02IXwmWgYbYqLFmJVlDa0Y4oi6YWgij9T5mKGLOQpJIZAv
        2ojiW7vpKOOSZ002IGyRESkRWkaSlRxL3K2HoZVeQRgemCN1mVxjSJJkJnhphqmjRkbRaFpyPMUpWEh4
        bmjnQ3nqueefgAYq6KAUBQQAIfkECRkA2QAsAAAAAEMAQwAHCPwAswkcSLCgwYMIEypcyLChw4cQI0qc
        SHEioIsYMwKqyDGhxo8gN3asCPKfyZMo/4EcCVFjypcwVWZkudBlTJOAbuKcSdNgRp0ncwKVebEnQYxD
        dwoditHoz6A6kSYlKrKjVKU3bb68qtTqxa1fYWpNybUrxbI7Y5YUq7aoxaVTg4aNK/ctXbJz78qMiDZu
        36lNHf4FnFdvYIaFDSe+67ZmWLh0B0eVW9XjUsltISfN2xihVMyZFV/u7BOy5s2LgRYmXTA1Y9eRK7c+
        rZeoatg7PdMWLXZsVtkDcftd7Pu37tq9TX8kfFD4cLhrmc9GnlwpUud1p1PHGxLn69LH27kXjw3eNvXl
        r0eXB/37afrsR4WyB+ued27t29GHvx9/P9XdipUXXk7zoSbgfgUyBVw22PlHXnMAOlgbawI1KKGBEF4o
        IYUVRqghhseh5OGHeCn0mYUIznVYiOaRyJ2IC84mn4uTmeUYjQ8ihuKHHOo2oosrNrTjhjHeiGNbZxH3
        Y2hgcVRWfe9x55VmS6pFH0tQRtVgkCPN52WPToImJpc9jRcbmUYxmCVqaKYZnH6Z8eSmkCHVWeScOtaJ
        55589unnnxwFBAAh+QQJGQDZACwAAAAAQwBDAAcI/ACzCRxIsKDBgwgTKlzIsKHDhxAjSpxIcSKgixgz
        AqrIMaHGjyA3dqwI8p/Jkyj/gRwJUWPKlzBVZmS50GVMk4Bu4pxJ02BGnSdzApV5sSdBjEN3Ch2K0ejP
        oDqRJiUqsqNUpTdtvryq1OrFrV9hakX5lGxRilyDLk1ZUmzMphbXTsU612zcumzD4t0ZMW1dv3PhNgQc
        WO9eog4NHyZceHBYuYUhJ10q2CNlxZMxM1171rJQxlE1A71a2SdnyZtRh86rUDRe0I0Run49+2/VgrUj
        HxZ7+6hq2r9tyw6uezdr08bBEo/tO3ne5VM7D8xd3K1w3NAzq4ZtFztd4MMhw/O+jJzo4vDoFZPune0x
        deXpP45XW975d/jR2b/XnjW7zPr2ccfcdP6Ntt9mBx1o34DNLeggfQkW+KCBw034oHTeWegchhlCpWFW
        YLXmnoTJrcdehwIuyBWHpn324WhqnQjgi5klpqCGLHpGY2p9kehgjjX5uKGMDAF2o1lvEemYXGXt5Vdp
        Ej1ZImRQxrVfiog59V6KVY7UZJLE8WQUgViCCWRPY0V25pjtyReaRmw+FN9KcaKFXp145qnnnnxyFBAA
        IfkECRkA2QAsAAAAAEMAQwAHCPwAswkcSLCgwYMIEypcyLChw4cQI0qcSHEioIsYMwKqyDGhxo8gN3as
        CPKfyZMo/4EcCVFjypcwVWZkudBlTJOAbuKcSdNgRp0ncwKVebEnQYxDdwoditHoz6A6kSYlKrKjVKU3
        bb68qtTqxa1fYWpNybUrxbI7Y5YUq7aoxaVTg4aNK/ctXbJz78qMiDZu36lNHf4FnFdvYIaFDSe+67Zm
        WLh0B0eVW9XjUsltISfN2xihVMyZFV/u7BOy5s2LgRYmXTA1Y9eRK7c+rZdobbGyB8KOTVux596vgcf+
        fRuscL+5s+3mXRxs6eZ4jyN/Dl2l7eo7qTf/iD37bKzGokFnncv68fLM4nGPpp4e/fnodb93X1u8vHTC
        9H3Lx46Uu/Xh+1V3lUvveRdgdyj5hxpxCKqXHmsCFVjfWOMx2GB0T6mWXIT3XRjVhhyS5eFrCn0moYDk
        QXjUaB1Cx5WKKwrV4nyUNXTiiHvZeOOFMB7UnoeHCTZjgz1ahqOGZy22I2W4cVRWhqIZ55VmQ4oYHUtQ
        athhkFi+92CRSS4HGk9G6ZZleCD2RCF+YDqloHttlmlmSHTK6SSdadqp55589umnRAEBACH5BAkZANkA
        LAAAAABDAEMABwj8ALMJHEiwoMGDCBMqXMiwocOHECNKnEhxIqCLGDMCqsgxocaPIDd2rAjyn8mTKP+B
        HAlRY8qXMFVmZLnQZUyTgG7inEnTYEadJ3MClXmxJ0GMQ3cKHYrR6M+gOpEmJSqyo1SlN22+vKrU6sWt
        X2FqTcm1K8WyO2OWFKu2qMWlU4OGjSv3LV2yc+/KjIg2bt+pTR3+BZxXb2CGhQ0nvuu2Zli4dAdHlVvV
        41LJbSEnzdsYoVTMmRVf7uwTsubNi4EWJl0wNWPXkSu3Pq2XaG2xsgfCjk1bsefer4HH/n0brHC/ubPt
        5l0cbOnmKJ9C3/l8+ljorJcT1k64OuisxN9DU5+NtXh43KO9c898XPxe8tOVtkddPf7129nnoz4fNfd6
        pvf5Vl98tjXHmkD/7acfbsQRSJmBySm3IHI5TTjeQQkqaOGBuplmnXRqOWeZUPyhh9lVhzVYIISwccXh
        UY85KBNTlDWUIWDD2XijjC9iuKN9Pfoo42t2DUnfW6f9uGJ0EQq2WolMapYiklthZxxLIKq23pQjhedl
        kGeBJiaXPQXIG5hdZrkdmmV+pKVGRvEV0pxNxunknHbmqeeefPbJZ0AAIfkECRkA2QAsAAAAAEMAQwAH
        CPwAswkcSLCgwYMIEypcyLChw4cQI0qcSHEioIsYMwKqyDGhxo8gN3asCPKfyZMo/4EcCVFjypcwVWZk
        udBlTJOAbuKcSdNgRp0ncwKVebEnQYxDdwoditHoz6A6kd5cSlRkR6lKpz6FiZXo1Ysvu6K0GRZsyqYU
        xeLUSjYs16IWqSYNanbuWKst5doluvcs3oZq7QaeixZw3b5ZEdP961Fv38GCGR+U6jgpZKBCCzdejPhy
        TKxwG2c+HLkyZrOafco1HZU0Yb8KXSv2TFiyQNmzcXe2rftx772hC/4urfgtwuG1WQOXjDx5cePClS+X
        Hln187LUa1u/fje7ZcbGqJt/Fv929Hbarb2X33mePPbrlMGrPz2/9XbuifHLvI8fvfbo+uXXH3P1jVcg
        dPzB555Wxx34nn7BHeWgXxPetdlYuRW4mm23LeXfYls5x55oSs3X1nfhcdghXbt9yOKIsS1IIXepNUij
        jBYaVuGOKqo24Y8RMoQjhD3ayBWE46Ulm4szlsWRWCG2SOFXeu2IHUtRpleaUdn452WQWNImZo09ndgi
        mFyaiSKaXA5UUno8taljSCHJSRKdRdqp55589umnQgEBACH5BAkZANkALAAAAABDAEMABwj8ALMJHEiw
        oMGDCBMqXMiwocOHECNKnEhxIqCLGDMCqsgxocaPIDd2rAjyn8mTKP+BHAlRY8qXMFVmZLnQZUyTgG7i
        nEnTYEadJ3MClXmxJ0GMQ3cKHYrR6M+kRHUuJSqyI1KUV1/ahJmVqNWLWsFyfRp2qlKSYrXGLDl2bNWI
        aaEGjStXpkWzdbvWtduSbl6/cps61LuX8N+3CgEf3hu2YVa8SQ1HPltzqmKpl28+RuwzrWTMkJmKFYyQ
        bua1p9emLOoxdOHUkTkPhB3b9evSthczHot7t1vfjQ/SFp07sOzhxIEHP1rcOHLMnZWvJqucNXPpWD/f
        Luj5eXbvxnOFWp+9VDtQ8+dHc+7e3G171OLXv08PHnV07Fvxy8dOdX76+9XlJ9145A1Yn2ayZXMgVfxl
        1xtw6DFGYIESRtWggw8etqB9rakF2oYqTZcYe/RFCBplHYb3oX7lJchceaJdGKJXDCHnn3EPgWigi53d
        eCFpg/nY4ISOCWkgWr9BCBmQcPllonvT8VgkXkbiVBZNT2bJ5FftmbglS9TBR5yUHAkoIU9G9QieRmlW
        ZmaUaLZZY0h0kilna3TeqeeefPbpJ0cBAQAh+QQJGQDZACwAAAAAQwBDAAcI/ACzCRxIsKDBgwgTKlzI
        sKHDhxAjSpxIcSKgixgzAqrIMaHGjyA3dqwI8p/Jkyj/gRwJUWPKlzBVZmS50GVMk4Bu4pxJ02BGnSdz
        ApV5sSdBjEN3Ch2K0ejPpER1LiUqsiNSlFdf2oSZlajVi1rBcn0adqpSkmK1xiw5dmzViGmhBo0rV6ZF
        s3W71rXbkm5ev3KbOtS7l/DftwoBH94btmFWvEkNRz5bc6piqZdvPkbsM61kzJCZihWMkG7mtafXpizq
        MXTh1JE5D4Qd2/Xr0rYXMx6Le7db340P0hadO7Ds4cSBBz9a3HhzqKyZK18N9jnQ6LOtE/9svPNc7cfU
        yerGLtAzcqxbXwsln808eKrnw+/0rpzt9PkF43//eH8u/cBKIcXdbflpVx1ZA/4lnHX89Ydab7UlOB17
        5TXXoIMPLhihhPXJViGGDlKYHYi7mSVihUtxGOJoJ374HYmamcfQYzAyRVllNTLWYoE5OveQijCSNth7
        GO4IYY8Z3vUbcIAJCZdfQIZnopGV4UUkVmXRpOKWTn71HIddsiQeasXxZFR2UZZFpZf6aXRmlWOqGeab
        uIVkJ51o3Ynnnnz26eefFQUEACH5BAkZANkALAAAAABDAEMABwj8ALMJHEiwoMGDCBMqXMiwocOHECNK
        nEhxIqCLGDMCqsgxocaPIDd2rAjyn8mTKP+BHAlRY8qXMFVmZLnQZUyTgG7inEnTYEadJ3MClXmxJ0GM
        Q3cKHYrR6M+kRHUuJSqyI1KUV1/ahJmVqNWLWrsGfRp2qlKSYLnGLMnV7FmLbqGKhSoTLt2yd1MWbZk2
        r1K/Y6synHuXMN2mDfsCjrp4Z+K+cZkqLvxWoeLJSQ1LhSz4YFbNN0GHTosY4WTMkiMDvdy5IGq/ouW2
        Hvgadu28e32qxn278OxsvQ8Hl216t2/jwj0jF76cuOvmmYc7Pwod5+jqq1tLZ9wW+2bdw4G7hxwP+Gpu
        2kvFjl8fu7vj5+HLsv9YnrT25mTxNtZ73/f1/fyBB2B8A9YFX4HcDXgeegg2+J6ADha4IIMRSvjbdhV+
        V1yG+01InVYcrhWgR5x516F9v1H4V4hYcTYYZCyK6NWLMU5HY42bpaibiQiW5hCGEXp4I44torUWjzt1
        h5Zb7R15mpAPzQWkXmXR1GSC2UEJF37S+dhTfk6mpuNXVzqppZVgyualUcptZeaabFo230dxcsRenXjm
        qeeefBoVEAAh+QQJGQDZACwAAAAAQwBDAAcI/ACzCRxIsKDBgwgTKlzIsKHDhxAjSpxIcSKgixgzAqrI
        MaHGjyA3dqwI8p/Jkyj/gRwJUWPKlzBVZmS50GVMk4Bu4pxJ02BGnSdzApV5sSdBjEN3Ch2K0ejPpER1
        LiUqsiNSlFdf2oSZlajVi1rBcn0adqpSkmK1xiw5dmzViGmhBo0rV6ZFs3W71rXbkm5ev3KbOtS7l/Df
        twoBH94btmFWvEkNRz5bc6piqZdvPkbsM61kzJCZihWMkG7mtafXpizqMXTh1JE5D0z9WSlj1KVdY926
        W/ff3FB5z/UdWHY22FT11v7d+TDZqLfHNi+eXOhy5keJr1bKNvpqzsbIUX/03rig5/DDr4PeOR366+fv
        2Ztfql58/e/WwWsPLvw26+zk4YeeZvoF2JtKBvIFYILuGfjfggxG+CCEESY44Wz7VRgbcBpaaNxxGXaI
        W2si5vVdYueF6OBoF853YIn4zcXQYzBqRlllNRb30IAdkjYjjxK2iGKOmN1FpHQUAXZfW2WhhdeSAuL3
        1ZMBPimkRPdl6eNI9XV5JUfwuSXal1MC2RuZLPUX25ZGHdSdfWy2iWJIdMoJJp0f2qnnnnz26edEAQEA
        IfkECRkA2QAsAAAAAEMAQwAHCPwAswkcSLCgwYMIEypcyLChw4cQI0qcSHEioIsYMwKqyDGhxo8gN3as
        CPKfyZMo/4EcCVFjypcwVWZkudBlTJOAbuKcSdNgRp0ncwKVebEnQYxDdwoditHoz6REdS4lKrIjUpRX
        X9qEmZWo1YtawXJ9GnaqUpJitcYsOXZs1YhpoQaNK1emRbN1u9a125JuXr9ymzrUu5fw37cKAd/Ea/hv
        w6x4w6ZszPRszamK56alvHgzYp+eI2N9yrmzUMEI6WZWKrb02smfj4qWSnp14NgCba+tPbswbt2mc7qG
        WvQgcNNR9+5O3ZvpR+XLQUOHTXb6aOnWWR9PWlx2ds3E251j/06V/Nzxw902B3q1+8DQ1tPvPv0Z/vTq
        vumPJ48/fv31t8lH237fbZWde7kBSJyAAxJonnkIvqfgg7cxR+GFESZ4IYUZarhhgbh5iNWHUsGWmH0k
        umWZR5iFd6BnDEGWYolexTjhjHw9diOJqNm4I4YdsogjeyGeOGR0d6non1toMebiaKoFOZhfP05WFk3y
        ZdnjSOl1KWWT67nGk1ESMljWlywZGCCaTj1Hm0Zk9hXSnHFyNCebdeap55589vlQQAAh+QQJGQDZACwA
        AAAAQwBDAAcI/ACzCRxIsKDBgwgTKlzIsKHDhxAjSpxIcSKgixgzAqrIMaHGjyA3dqwI8p/Jkyj/gRwJ
        UWPKlzBVZmS50GVMk4Bu4pxJ02BGnSdzApV5sSdBjEN3Ch2K0ejPoDqR3lxKVGRHqUEvxrQJEyvRq1pT
        ekXJVWxYskUpjoXa9ePUtlYjnk2KlirdnRbt3iW616zcuX3X3m3qUPBgwIHTMkScWG/ihobplh2sdDFV
        xlGf7j2rGCHWyHA1Sw5L2LNdzJkdM70c16fqxn23tj76GnbstqZvw9X9sjNt3mZrb54tELVt4HhdI6+7
        PKvy5nyh+85m/Pjy6dWHCx/+PPpt0LmrhWJfCj41cKnjs26fmt28zO7X24+Gj7z8Yfrn5SdNL13/6oP+
        QbcfcdStJ+B9ABp44IC5LdjcdAMF6GBvBBan4IS4eTSXhPmpVxN59j2IXoURcnZhfJVZhuFjkHF4IIQa
        nvgijBqu+J9ELtZHokIhfpehWoj1SKFepQF5Wo7efTWSaDKKVZdRBRoYYpE9iSbbdjxBaSFoXGapZYlC
        qkfjlyWl5uWXPIak5o5oxhhSm3DGKeecdEIUEAAh/u9UaGlzIEdJRiBmaWxlIHdhcyBhc3NlbWJsZWQg
        d2l0aCBHSUYgQ29uc3RydWN0aW9uIFNldCBmcm9tOg0KDQpBbGNoZW15IE1pbmR3b3JrcyBJbmMuDQpQ
        Lk8uIEJveCA1MDANCkJlZXRvbiwgT250YXJpbw0KTDBHIDFBMA0KQ0FOQURBLg0KDQpUaGlzIGNvbW1l
        bnQgYmxvY2sgd2lsbCBub3QgYXBwZWFyIGluIGZpbGVzIGNyZWF0ZWQgd2l0aCBhIHJlZ2lzdGVyZWQg
        dmVyc2lvbiBvZiBHSUYgQ29uc3RydWN0aW9uIFNldAA7
</value>
  </data>
</root>